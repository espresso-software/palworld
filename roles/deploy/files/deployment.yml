---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: palworld-server
  name: palworld-server-datadir
  namespace: palworld
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 12Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: palworld-cm
  namespace: palworld
data:
  PUID: "1000"
  PGID: "1000"
  PORT: "8211"  # Optional but recommended
  PLAYERS: "16"  # Optional but recommended
  SERVER_PASSWORD: "worldofpals"  # Optional but recommended
  MULTITHREADING: "true"
  RCON_ENABLED: "true"
  RCON_PORT: "25575"
  TZ: UTC
  COMMUNITY: "false"  # Enable this if you want your server to show up in the community servers tab, USE WITH SERVER_PASSWORD!
  SERVER_NAME: "Goons Palworld"
  SERVER_DESCRIPTION: "Ty is OP"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: palworld-server
  name: palworld-server
  namespace: palworld
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: palworld-server
  template:
    metadata:
      labels:
        app: palworld-server
    spec:
      nodeSelector:
        kubernetes.io/role: gamer
      containers:
        - name: palworld-server
          image: thijsvanloef/palworld-server-docker:v1.2.2
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8211
              name: server
              protocol: UDP
            - containerPort: 27015
              name: query
              protocol: UDP
          resources:
            limits:
              cpu: 4000m
              memory: 16Gi
            requests:
              cpu: 1000m
              memory: 8Gi
          env:
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: palworld-secrets
                  key: rconPassword
          envFrom:
            - configMapRef:
                name: palworld-cm
          volumeMounts:
            - mountPath: /palworld
              name: datadir
      startupProbe:
        exec:
          command:
            - pgrep
            - 'PalServer-Linux > /dev/null || exit 1'
        initialDelaySeconds: 600
        failureThreshold: 3
        periodSeconds: 30
        timeoutSeconds: 30
      livenessProbe:
        exec:
          command:
            - pgrep
            - 'PalServer-Linux > /dev/null || exit 1'
        initialDelaySeconds: 5
        failureThreshold: 3
        periodSeconds: 30
        timeoutSeconds: 30
      readinessProbe:
        exec:
          command:
            - pgrep
            - 'PalServer-Linux > /dev/null || exit 1'
        initialDelaySeconds: 5
        failureThreshold: 3
        periodSeconds: 30
        timeoutSeconds: 30
      volumes:
        - name: datadir
          persistentVolumeClaim:
            claimName: palworld-server-datadir
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: palworld-server
  name: palworld-server
  namespace: palworld
  annotations:
    metallb.universe.tf/loadBalancerIPs: "{{ network.identifier }}.3.99"
spec:
  ports:
    - name: server
      port: 8211
      protocol: UDP
      targetPort: server
    - name: query
      port: 27015
      protocol: UDP
      targetPort: query
  selector:
    app: palworld-server
  type: LoadBalancer
  externalTrafficPolicy: Local
  internalTrafficPolicy: Local
